apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: {{ .Release.Name }}-push-to-registry-template
spec:
  arguments:
    parameters:
    
    - name: git-commits
      value: "no_commit"
    
    - name: git-repository-type
      value: {{ .Values.github.repository.type }}
      
    - name: git-url
      value: "git_url"
    
    - name: git-path
      value: {{ .Values.github.repository.path.default }}
    
    - name: registry-type
      value: {{ .Values.registry.type }}
    
    - name: region                                  
      value: {{ .Values.registry.region }}
    
    - name: registry
      value: {{ .Values.registry.url }}
    
    - name: chartname
      value: "chart_name"
      

  entrypoint: generate-token
  volumeClaimTemplates:
  - metadata:
      name: workdir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
  
  volumes:
  - name: aws-secrets
    secret:
      secretName: {{ .Values.secrets.aws.name }}

  templates:
  - name: generate-token
    steps:
    - - name: pull-repo
        template: pull-repo

    - - name: create-token
        template: gen-token-bash
        when: "{{ "{{" }} workflow.parameters.registry-type {{ "}}" }} == aws"

    - - name: aws-login
        template: login
        when: "{{ "{{" }} workflow.parameters.registry-type {{ "}}" }} == aws"
        arguments:
          parameters:
          - name: token
            value: "{{ "{{" }}steps.create-token.outputs.result{{ "}}" }}"

    - - name: private-registry
        template: private-registry
        when: "{{ "{{" }} workflow.parameters.registry-type {{ "}}" }} == private_registry"

    - - name: helm-package
        template: helm-package
        when: "{{ "{{" }} workflow.parameters.registry-type {{ "}}" }} == chartmuseum"
        
    - - name: push-to-chartmuseum
        template: push-to-chartmuseum
        when: "{{ "{{" }} workflow.parameters.registry-type {{ "}}" }} == chartmuseum"

  - name: pull-repo
    script:
      image: alpine/git:v2.30.2
      imagePullPolicy: IfNotPresent
      command: [sh]
      source: |
        if [[ {{ "{{" }} workflow.parameters.git-repository-type {{ "}}" }} == "private" ]] 
        then          
          cd /mnt/vol && git clone https://$git_token:x-oauth-basic@github.com/$git_username/$repo_name.git git-local-dir
        else
          cd /mnt/vol && git clone {{ "{{" }} workflow.parameters.git-url {{ "}}" }} git-local-dir
        fi
        if [[ {{ "{{" }} workflow.parameters.git-commits {{ "}}" }} == "no_commit" ]]
        then
          echo {{ "{{" }} workflow.parameters.git-path {{ "}}" }} > git-path.txt
        else
          if [[ -s Chart.yaml ]]
          then
            echo -n . > git-path.txt
          else
            echo -n helm-minio-crd > git-path.txt
            echo  {{ "{{" }} workflow.parameters.git-commits {{ "}}" }}
          fi
        fi


      env:
      - name: git_username
        valueFrom:
          secretKeyRef:
            name: {{ .Values.secrets.git.name }}
            key: GIT_USERNAME
      - name: git_token
        valueFrom:
          secretKeyRef:
            name: {{ .Values.secrets.git.name }}
            key: GIT_TOKEN
      - name: repo_name
        valueFrom:
          secretKeyRef:
            name: {{ .Values.secrets.git.name }}
            key: REPO_NAME
      volumeMounts:
      - name: workdir
        mountPath: /mnt/vol

  - name: gen-token-bash
    script:
      image: amazon/aws-cli:2.2.4
      imagePullPolicy: IfNotPresent
      command: [bash]
      source: |
        export AWS_ACCESS_KEY_ID=$access_key 
        export AWS_SECRET_ACCESS_KEY=$secret_key  
        export AWS_DEFAULT_REGION={{ "{{" }} workflow.parameters.region {{ "}}" }}  
        /usr/local/bin/aws ecr-public get-login-password --region {{ "{{" }} workflow.parameters.region {{ "}}" }}
      
      env:
      - name: access_key
        valueFrom:
          secretKeyRef:
            name: {{ .Values.secrets.aws.name }}
            key: AWS_ACCESS
      - name: secret_key
        valueFrom:
          secretKeyRef:
            name: {{ .Values.secrets.aws.name }}
            key: AWS_SECRET

  - name: login
    inputs:
      parameters:
      - name: token
    script:
      image: alpine/helm:3.5.4
      imagePullPolicy: IfNotPresent
      command: [sh]
      source: |
        export HELM_EXPERIMENTAL_OCI=1
        echo {{ "{{" }} inputs.parameters.token {{ "}}" }} | helm registry login --username AWS --password-stdin {{ "{{" }} workflow.parameters.registry {{ "}}" }}
        cd /mnt/vol/git-local-dir
        helm chart save . {{ "{{" }} workflow.parameters.chartname {{ "}}" }}
        helm chart push {{ "{{" }} workflow.parameters.chartname {{ "}}" }}

      volumeMounts:
      - name: workdir
        mountPath: /mnt/vol

  - name: private-registry
    script:
      image: alpine/helm:3.5.4
      imagePullPolicy: IfNotPresent
      command: [sh]
      source: |
        export HELM_EXPERIMENTAL_OCI=1 
        helm registry login {{ "{{" }} workflow.parameters.registry {{ "}}" }} --username $registry_username --password $registry_password
        cd /mnt/vol/git-local-dir
        helm chart save . {{ "{{" }} workflow.parameters.chartname {{ "}}" }}
        helm chart push {{ "{{" }} workflow.parameters.chartname {{ "}}" }}

      env:
      - name: registry_username
        valueFrom:
          secretKeyRef:
            name: password
            key: USERNAME
      - name: registry_password
        valueFrom:
          secretKeyRef:
            name: {{ .Values.secrets.aws.name }}
            key: password
      volumeMounts:
      - name: workdir
        mountPath: /mnt/vol

  - name: helm-package
    script:
      image: alpine/helm:3.5.4
      imagePullPolicy: IfNotPresent
      command: [sh]
      source: |
        cd /mnt/vol/git-local-dir
        cd $(cat ../git-path.txt)
        helm package .

      volumeMounts:
      - name: workdir
        mountPath: /mnt/vol

  - name: push-to-chartmuseum
    script:
      image: curlimages/curl
      imagePullPolicy: IfNotPresent
      command: [sh]
      source: |
        cd /mnt/vol/git-local-dir
        cd $(cat ../git-path.txt)
        curl --user $registry_username:$registry_password --data-binary "@$(grep -A0 '^name:' ./Chart.yaml | awk '{ print $2}')-$(grep -A0 '^version:' ./Chart.yaml | awk '{ print $2}').tgz" {{ "{{" }} workflow.parameters.registry {{ "}}" }}/api/charts

      env:
      - name: registry_username
        valueFrom:
          secretKeyRef:
            name: {{ .Values.secrets.chartmuseum.name }}
            key: CHARTMUSEUM_USERNAME
      - name: registry_password
        valueFrom:
          secretKeyRef:
            name: {{ .Values.secrets.chartmuseum.name }}
            key: CHARTMUSEUM_PASSWORD
      volumeMounts:
      - name: workdir
        mountPath: /mnt/vol
