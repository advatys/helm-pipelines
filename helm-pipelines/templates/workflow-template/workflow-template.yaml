apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: {{ .Release.Name }}-push-to-registry-template
spec:
  arguments:
    parameters:
    
    - name: git-repository
      value: "used_by_webhook" # the "secret" method is still used when manually launching the workflow  
    
    - name: git-commits
      value: "no_commit"
      
    - name: git-branch
      value: {{ .Values.github.repository.branch }}
    
    - name: git-repository-type
      value: {{ .Values.github.repository.type }}
      
    - name: git-url
      value: "git_url"
    
    - name: git-path
      value: {{ .Values.github.repository.path.default }}
    
    - name: registry-type
      value: {{ .Values.registry.type }}
    
    - name: registry
      value: {{ .Values.registry.url }}
    
    - name: chartname
      value: "chart_name"
      

  entrypoint: generate-token
  volumeClaimTemplates:
  - metadata:
      name: workdir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi

  templates:
  - name: helm-pipeline
    steps:
    - - name: pull-repo
        template: pull-repo

    - - name: oci-registry
        template: oci-registry
        when: "{{ "{{" }} workflow.parameters.registry-type {{ "}}" }} == oci_registry"

    - - name: helm-package
        template: helm-package
        when: "{{ "{{" }} workflow.parameters.registry-type {{ "}}" }} == chartmuseum"
        
    - - name: push-to-chartmuseum
        template: push-to-chartmuseum
        when: "{{ "{{" }} workflow.parameters.registry-type {{ "}}" }} == chartmuseum"

  - name: pull-repo
    script:
      image: bitnami/git:2.32.0
      imagePullPolicy: IfNotPresent
      command: [bash]
      source: |
        if [[ {{ "{{" }} workflow.parameters.git-repository-type {{ "}}" }} == "private" ]]
        then
          if [[ {{ "{{" }} workflow.parameters.git-commits {{ "}}" }} == "no_commit" ]]
          then
            cd /mnt/vol && git clone --branch {{ "{{" }} workflow.parameters.git-branch {{ "}}" }}  https://$git_token:x-oauth-basic@github.com/$git_username/$repo_name.git git-local-dir
          else
            cd /mnt/vol && git clone --branch {{ "{{" }} workflow.parameters.git-branch {{ "}}" }} https://$git_token:x-oauth-basic@github.com/$git_username/{{ "{{" }} workflow.parameters.git-repository {{ "}}" }}.git git-local-dir
          fi
        else
          cd /mnt/vol && git clone {{ "{{" }} workflow.parameters.git-url {{ "}}" }} git-local-dir
        fi
        if [[ {{ "{{" }} workflow.parameters.git-commits {{ "}}" }} == "no_commit" ]]
        then
          echo {{ "{{" }} workflow.parameters.git-path {{ "}}" }} > git-path.txt
        else
          declare -a modified="("{{ "{{" }} workflow.parameters.git-commits {{ "}}" }}")"
          echo "${modified[@]}"
          printf '%s\n' "$(dirname "${modified[@]}")" | sort -u | cut -d "/" -f1 | uniq > git-path.txt
        fi


      env:
      - name: git_username
        valueFrom:
          secretKeyRef:
            name: {{ .Values.secrets.git.name }}
            key: GIT_USERNAME
      - name: git_token
        valueFrom:
          secretKeyRef:
            name: {{ .Values.secrets.git.name }}
            key: GIT_TOKEN
      - name: repo_name
        valueFrom:
          secretKeyRef:
            name: {{ .Values.secrets.git.name }}
            key: REPO_NAME
      volumeMounts:
      - name: workdir
        mountPath: /mnt/vol


  - name: oci-registry
    script:
      image: alpine/helm:3.5.4
      imagePullPolicy: IfNotPresent
      command: [sh]
      source: |
        export HELM_EXPERIMENTAL_OCI=1 
        helm registry login {{ "{{" }} workflow.parameters.registry {{ "}}" }} --username $registry_username --password $registry_password
        cd /mnt/vol/git-local-dir
        helm chart save . {{ "{{" }} workflow.parameters.chartname {{ "}}" }}
        helm chart push {{ "{{" }} workflow.parameters.chartname {{ "}}" }}

      env:
      - name: registry_username
        valueFrom:
          secretKeyRef:
            name: password
            key: USERNAME
      - name: registry_password
        valueFrom:
          secretKeyRef:
            name: {{ .Values.secrets.aws.name }}
            key: password
      volumeMounts:
      - name: workdir
        mountPath: /mnt/vol

  - name: helm-package
    script:
      image: alpine/helm:3.5.4
      imagePullPolicy: IfNotPresent
      command: [sh]
      source: |
        cd /mnt/vol/git-local-dir
        cat ../git-path.txt
        for line in $(cat ../git-path.txt); do 
          if [[ -s "$line"/Chart.yaml ]]; then
            cd "$line"
            helm package .
            cd ..
          fi
        done

      volumeMounts:
      - name: workdir
        mountPath: /mnt/vol

  - name: push-to-chartmuseum
    script:
      image: curlimages/curl
      imagePullPolicy: IfNotPresent
      command: [sh]
      source: |
        cd /mnt/vol/git-local-dir      
        for line in $(cat ../git-path.txt); do 
          if [[ -s "$line"/Chart.yaml ]]; then
            cd "$line"
            curl --user $registry_username:$registry_password --data-binary "@$(grep -A0 '^name:' ./Chart.yaml | awk '{ print $2}')-$(grep -A0 '^version:' ./Chart.yaml | awk '{ print $2}').tgz" {{ "{{" }} workflow.parameters.registry {{ "}}" }}/api/charts
            cd ..
          fi
        done        

      env:
      - name: registry_username
        valueFrom:
          secretKeyRef:
            name: {{ .Values.secrets.chartmuseum.name }}
            key: CHARTMUSEUM_USERNAME
      - name: registry_password
        valueFrom:
          secretKeyRef:
            name: {{ .Values.secrets.chartmuseum.name }}
            key: CHARTMUSEUM_PASSWORD
      volumeMounts:
      - name: workdir
        mountPath: /mnt/vol
