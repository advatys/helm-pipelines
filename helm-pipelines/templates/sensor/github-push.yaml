apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: {{ .Release.Name }}-github-push
spec:
  eventBusName: {{ if eq .Values.eventbus.enabled "true" }}{{ .Release.Name }}-default{{ else }}{{ .Values.eventbus.eventbusName }}{{ end }}
  template:
    serviceAccountName: {{ if eq .Values.rbac.operateWorkflow "true" }}{{ .Release.Name }}-operate-workflow-sa{{ else }}{{ .Values.rbac.operateWorkflowSaName }}{{ end }}
  dependencies:
    - name: github-push-event
      eventSourceName: {{ .Release.Name }}-github-events
      eventName: push
#      filters:
#        data:
#          # Name of the event that triggered the delivery: [pull_request, push, yadayadayada]
#          # https://docs.github.com/en/developers/webhooks-and-events/webhook-events-and-payloads
#          - path: body.X-GitHub-Event
#            type: string
#            value:
#              - pull_request
#          - path: body.action
#            type: string
#            value:
#              - opened
#              - edited
#              - reopened
#              - synchronize
#          - path: body.pull_request.state
#            type: string
#            value:
#              - open
#          - path: body.pull_request.base.ref
#            type: string
#            value:
#              - master

  triggers:
    - template:
        name: github-workflow-trigger
        k8s:
          group: argoproj.io
          version: v1alpha1
          resource: workflows
          operation: create
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
#                name: github-
                generateName: helm-pipeline-     
              spec:
                entrypoint: call-push-to-registry-template
                
                volumeClaimTemplates:
                - metadata:
                    name: workdir
                  spec:
                    accessModes: [ "ReadWriteOnce" ]
                    resources:
                      requests:
                        storage: 1Gi
                
                volumes:
                - name: aws-secrets
                  secret:
                    secretName: {{ .Values.secrets.aws.name }}
                      
                arguments:
                  parameters:
                    - name: git-owner
                    - name: git-repository
                    - name: git-commits
                    
                    - name: git-repository-type
                      value: {{ .Values.github.repository.type }}
                      
                    - name: git-url
                      value: "git_url"
                    
                    - name: git-path
                      value: {{ .Values.github.repository.path.default }}
                    
                    - name: registry-type
                      value: {{ .Values.registry.type }}
                    
                    - name: region                                  
                      value: {{ .Values.registry.region }}
                    
                    - name: registry
                      value: {{ .Values.registry.url }}
                    
                    - name: chartname
                      value: "chart_name"
                      
                templates:
                  - name: call-push-to-registry-template
                    dag:
                      tasks:
                        - name: call-push-to-registry-template
                          templateRef:
                            name: {{ .Release.Name }}-push-to-registry-template
                            template: generate-token
#                          arguments:
#                            parameters:
#                            - name: message
#                              value: "hello world"


          parameters:
            - src:
                dependencyName: github-push-event
                dataKey: body.repository.owner.name
              dest: spec.arguments.parameters.0.value
            - src:
                dependencyName: github-push-event
                dataKey: body
              dest: spec.arguments.parameters.1.value
            - src:
                dependencyName: github-push-event
                dataTemplate: '{{ "{{" }} values (pick (.Input.body.commits | first) "modified" "added" "removed") | toJson | quote | replace "[" "" | replace "]" "" | replace "," " " {{ "}}" }}' 
                #dataTemplate: '{{ "{{" }} concat (pluck "modified" .Input.body.commits) (pluck "added" .Input.body.commits) (pluck "removed" .Input.body.commits) | uniq {{ "}}" }}' 
              dest: spec.arguments.parameters.2.value
            # Append pull request number and short sha to dynamically assign worklfow name <github-21500-2c065a>
 #           - src:
 #               dependencyName: github-push-event
 #               dataTemplate: "{{ "{{" }} .Input.body.pull_request.number {{ "}}" }}-{{ "{{" }} .Input.body.pull_request.head.sha | substr 0 7 {{ "}}" }}"
 #             dest: metadata.name
 #             operation: append
#      retryStrategy:
#        steps: 3