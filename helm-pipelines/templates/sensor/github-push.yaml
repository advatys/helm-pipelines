apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: {{ .Release.Name }}-github-push
spec:
  eventBusName: {{ if eq .Values.eventbus.enabled "true" }}{{ .Release.Name }}-default{{ else }}{{ .Values.eventbus.eventbusName }}{{ end }}
  template:
    serviceAccountName: {{ if eq .Values.rbac.operateWorkflow "true" }}{{ .Release.Name }}-operate-workflow-sa{{ else }}{{ .Values.rbac.operateWorkflowSaName }}{{ end }}
  dependencies:
    - name: github-push-event
      eventSourceName: {{ .Release.Name }}-github-events
      eventName: push
      filters:
        data:
          # Name of the event that triggered the delivery: [pull_request, push, yadayadayada]
          # https://docs.github.com/en/developers/webhooks-and-events/webhook-events-and-payloads
          - path: body.X-GitHub-Event
            type: string
            value:
              - push
#          - path: body.ref
#            type: string
#            value:
#              - refs/heads/{{ .Values.github.repository.branch }}


  triggers:
    - template:
        name: create-namespace-trigger
        k8s:
          group: ""
          version: v1
          resource: namespaces
          operation: create
          source:
            resource:
              apiVersion: v1
              kind: Namespace
              metadata:
                name: {{ .Release.Name }}-push-
                
          parameters:
            - src:
                dependencyName: github-push-event
                dataTemplate: "{{ "{{" }} .Input.body.after {{ "}}" }}"
              dest: metadata.name
              operation: append
                
    - template:
        name: github-workflow-trigger
        k8s:
          group: argoproj.io
          version: v1alpha1
          resource: workflows
          operation: create
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                name: {{ .Release.Name }}-push-
                namespace: {{ .Release.Name }}-push-
              spec:
                entrypoint: call-push-to-registry-template
                
                volumeClaimTemplates:
                - metadata:
                    name: workdir
                  spec:
                    accessModes: [ "ReadWriteOnce" ]
                    resources:
                      requests:
                        storage: 1Gi
                
                      
                arguments:
                  parameters:
                    - name: git-owner
                      value: {{ .Values.github.repository.owner }}
                      
                    - name: git-repository
                      value: {{ .Values.github.repository.name }}
                      
                    - name: git-branch
                      
                    - name: git-repository-type
                      value: {{ .Values.github.repository.type }}
                    
                    - name: git-path
                      value: {{ .Values.github.repository.path }}
                    
                    - name: registry-type
                      value: {{ .Values.registry.type }}
                    
                    - name: registry
                      value: {{ .Values.registry.url }}
                    
                    - name: chartname
                      value: "chart_name"
                      
                templates:
                  - name: call-push-to-registry-template
                    dag:
                      tasks:
                        - name: call-push-to-registry-template
                          templateRef:
                            name: {{ .Release.Name }}-push-to-registry-template
                            template: helm-pipeline

          parameters:
            - src:
                dependencyName: github-push-event
                dataKey: body.repository.owner.name
              dest: spec.arguments.parameters.0.value
            - src:
                dependencyName: github-push-event
                dataKey: body.repository.name
              dest: spec.arguments.parameters.1.value
            - src:
                dependencyName: github-push-event
                dataTemplate: '{{ "{{" }} .Input.body.ref {{ "}}" }}' 
              dest: spec.arguments.parameters.2.value

            # Append pull request number and short sha to dynamically assign worklfow name <github-21500-2c065a>
            - src:
                dependencyName: github-push-event
                dataTemplate: "{{ "{{" }} .Input.body.after {{ "}}" }}"
              dest: metadata.name
              operation: append
            - src:
                dependencyName: github-push-event
                dataTemplate: "{{ "{{" }} .Input.body.after {{ "}}" }}"
              dest: metadata.namespace
              operation: append
#      retryStrategy:
#        steps: 3