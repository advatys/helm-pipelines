github:
  repository:
    type: private # Can be private or public accordingly, private creds to be stored in a secret
    owner: owner_of_repo
    name: name_of_repo
    path: path_to_helm_chart

  webhook:
    # url the event-source will use to register at Github.
    # This url must be reachable from outside the cluster.
    url: github-event.apps.advatys.thadvatys.com
    route: "true" # if set to true, an openshift route will be created

registry:
  type: chartmuseum # Can be "aws", "private_registry" or "chartmuseum"
  url: http://chartmuseum.apps.advatys.thadvatys.com

vault:
  address: "http://vault.vault.svc.cluster.local:8200"
  path: kubernetes
  role: webhook
  skipVerify: "true"
  secrets:
    git:
      location: secret/data/git/config #git secrets' path in vault
      gitToken: git_token_vault_key 
    chartmuseum:
      location: secret/data/chartmuseum/config #chartmuseum secrets' path in vault
      chartmuseumUsername: chartmuseum_username_vault_key
      chartmuseumPassword: chartmuseum_password_vault_key
    oci:
      location: secret/data/oci/config #oci secrets' path in vault
      ociUsername: oci_username_vault_key
      ociPassword: oci_password_vault_key

eventbus:
  enabled: "true"
  replicas: 3
  persistence:
    storageClassName: gp2
    accessMode: ReadWriteOnce
    volumeSize: 2Gi
  containerTemplate:
    resources:
      requests:
        cpu: "10m"
  eventbusName: # Required if eventbus.enabled is set to false. Ignored otherwise.
        
rbac: 
  default: "true" # grant namespace's default sa the privileges required by argo-workflow to watch pods and get logs. Set to false if already granted
  operateWorkflow: "true" # create the sa and RBACs used by argo-events' sensor to create workflows. Set to false if already created.
  operateWorkflowSaName: # Required if operateWorkflow is set to false. Ignored otherwise.