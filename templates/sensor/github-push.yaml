apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: github-push
spec:
  eventBusName: argo-configuration-default
  template:
    serviceAccountName: argo-configuration-operate-workflow-sa
  dependencies:
    - name: github-push-event
      eventSourceName: github
      eventName: push
#      filters:
#        data:
#          # Name of the event that triggered the delivery: [pull_request, push, yadayadayada]
#          # https://docs.github.com/en/developers/webhooks-and-events/webhook-events-and-payloads
#          - path: body.X-GitHub-Event
#            type: string
#            value:
#              - pull_request
#          - path: body.action
#            type: string
#            value:
#              - opened
#              - edited
#              - reopened
#              - synchronize
#          - path: body.pull_request.state
#            type: string
#            value:
#              - open
#          - path: body.pull_request.base.ref
#            type: string
#            value:
#              - master

  triggers:
    - template:
        name: github-workflow-trigger
        k8s:
          group: argoproj.io
          version: v1alpha1
          resource: workflows
          operation: create
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
#                name: github-
                generateName: github-     
              spec:
                entrypoint: whalesay
                arguments:
                  parameters:
                    - name: git-owner
                    - name: git-repository
                    - name: git-ref
                templates:
                  - name: call-push-to-registry-template
                    dag:
                      tasks:
                        - name: call-push-to-registry-template
                          templateRef:
                            name: push-to-registry-template
                            template: generate-token
#                          arguments:
#                            parameters:
#                            - name: message
#                              value: "hello world"

                  - name: whalesay
                    inputs:
                      parameters:
                        - name: git-owner
                        - name: git-repository
                        - name: git-commits
                    container:
                      image: docker/whalesay:latest
                      command: [cowsay]
                      args: ["{{inputs.parameters.git-commits}}"]
          parameters:
            - src:
                dependencyName: github-push-event
                dataKey: body.repository.owner.name
              dest: spec.arguments.parameters.0.value
            - src:
                dependencyName: github-push-event
                dataKey: body.repository.name
              dest: spec.arguments.parameters.1.value
            - src:
                dependencyName: github-push-event
                dataTemplate: "{{ .Input.body.commits | first }}"
              dest: spec.arguments.parameters.2.value
            # Append pull request number and short sha to dynamically assign worklfow name <github-21500-2c065a>
 #           - src:
 #               dependencyName: github-push-event
 #               dataTemplate: "{{ .Input.body.pull_request.number }}-{{ .Input.body.pull_request.head.sha | substr 0 7 }}"
 #             dest: metadata.name
 #             operation: append
#      retryStrategy:
#        steps: 3